<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

       <context:annotation-config/>

    <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/my_db"/>
        <property name="username"  value="root"/>
        <property name="password" value="1111"/>
    </bean> <!--db에 접속-->

    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds"/>
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>

    <bean id="ss" class="org.mybatis.spring.SqlSessionTemplate"><!--default 생성자가 없다.-->
        <constructor-arg ref="factory"/>
    </bean>
    
    <!--dao들이 저장된 위치를 한번에 지정하여 DAO빈들이 생성되도록 하자-->
    <context:component-scan base-package="mybatis.dao"/>
<!--    아래 주석과 같은 의미-->
<!--    <bean class="mybatis.dao.EmpDAO" autowire="byType"/>-->

</beans>
